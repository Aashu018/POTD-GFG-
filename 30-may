

class Solution
{
    public boolean isWordExist(char[][] board, String word)
    {
        // Code here
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                if(board[i][j]==word.charAt(0)){
                    boolean ans = Wordsearch(board,i,j,word,0);
                    if(ans==true){
                        return true;
                    }
                }
            }
        }
        return false;
       
       
        
    }
     public static boolean Wordsearch(char[][] maze, int sr, int sc,String word,int idx) {
    if(idx == word.length()){
        return true;
    }
    if (sr < 0 || sc < 0 || sr == maze.length || sc == maze[0].length || maze[sr][sc] != word.charAt(idx)) {
      return false;         //1
    }
    maze[sr][sc]='*';//marking as visited in matrix
    
       int[] r = {-1, 1, 0, 0};
        int[] c = {0, 0, 1, -1};

    for(int i=0;i<4;i++){
       boolean ans =  Wordsearch(maze,sr + r[i],sc+c[i],word,idx+1);
       
        if(ans == true){
            return true;
        }
     }
     maze[sr][sc]=word.charAt(idx);
     return false;
}
    
}
