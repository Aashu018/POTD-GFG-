

// User function Template for Java

// Helper class to find largest number with minimum frequency
class Solution {
    // Function to find largest number with minimum frequency
    public static int LargButMinFreq(int arr[], int n) {
        // Your code here
        /*int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        for(int i=0;i<n;i++){
            if(arr[i]>max){
                max = arr[i];
            }
            if(arr[i]<min){
                min = arr[i];
            }
        }
        int range = max-min+1;
        int[] farr = new int[range];
        for(int i=0;i<n;i++){
            int idx = arr[i] - min;
            farr[idx]++;
        }*/
         Map<Integer, Integer> f = new HashMap<>();

        for (int i = 0; i < n; i++) {
            f.put(arr[i], f.getOrDefault(arr[i], 0) + 1);
        }

        int minFrequency = Integer.MAX_VALUE;
        int ans = -1;

        for (Map.Entry<Integer, Integer> entry : f.entrySet()) {
            int key = entry.getKey();
             int frequency = entry.getValue();

            if (frequency < minFrequency) {
                minFrequency = frequency;
                ans = key;
            } else if (frequency == minFrequency) {
                ans = Math.max(ans, key);
            }
        }

        return ans;
    }
        
        
        
    
}
